name: Deploy Zola to Cloudflare Pages
run-name: "Zola ‚Üí CF Pages ‚Ä¢ ${{ github.ref_name }} #${{ github.run_number }}"

on:
  push:
    branches: [ main ]
  pull_request:

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

# ‚úÖ Secrets ÂèÇÁÖß„ÅÆÈõÜÁ¥Ñ
env:
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
  CF_PAGES_PROJECT: etak64n-blog
  BUILD_DIR: public

jobs:
  # --- 1) Build ---
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Zola
        uses: taiki-e/install-action@v2
        with:
          tool: zola@latest

      - name: Build
        run: zola build

      - name: Upload artifact (site)
        uses: actions/upload-artifact@v4
        with:
          name: zola-public
          path: ${{ env.BUILD_DIR }}
          if-no-files-found: error
          retention-days: 1

  # --- 2) Deploy ---
  deploy:
    needs: build
    if: ${{ needs.build.result == 'success' && (github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false)) }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: zola-public
          path: ${{ env.BUILD_DIR }}

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken:  ${{ env.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ${{ env.BUILD_DIR }} --project-name=${{ env.CF_PAGES_PROJECT }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  # --- 3) NotifyÔºà1Âõû„Å†„Åë„ÉªÊú™ÂÆöÁæ©„Å™„Çâ„Ç®„É©„ÉºÔºâ ---
  notify:
    needs: [build, deploy]
    if: ${{ always() && (github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false)) }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    steps:
      # ‚ùó ÂøÖÈ†à: Webhook Êú™Ë®≠ÂÆö„Å™„Çâ failÔºà„Åì„Åì„ÅßÁµÇ‰∫ÜÔºâ
      - name: Verify DISCORD_WEBHOOK_URL is set
        run: |
          set -euo pipefail
          if [ -z "${DISCORD_WEBHOOK_URL:-}" ] || [ -z "$(printf '%s' "$DISCORD_WEBHOOK_URL" | tr -d '[:space:]')" ]; then
            echo "::error::DISCORD_WEBHOOK_URL secret is not set. Configure it in Settings ‚Üí Secrets and variables ‚Üí Actions."
            exit 1
          fi
          case "$DISCORD_WEBHOOK_URL" in
            https://discord.com/api/webhooks/*) : ;;
            *) echo "::warning::DISCORD_WEBHOOK_URL doesn't look like a Discord webhook URL."; ;;
          esac

      - name: Notify Discord (summary)
        continue-on-error: true
        env:
          BUILD_RES: ${{ needs.build.result }}
          DEPLOY_RES: ${{ needs.deploy.result }}
        run: |
          BUILD="${BUILD_RES:-unknown}"
          DEPLOY="${DEPLOY_RES:-skipped}"

          MSG=""
          case "$BUILD" in
            success) MSG+="‚úÖ Build: success\n" ;;
            failure) MSG+="‚ùå Build: failure\n" ;;
            *)       MSG+="‚ÑπÔ∏è Build: $BUILD\n" ;;
          esac
          case "$DEPLOY" in
            success) MSG+="üöÄ Deploy: success\n" ;;
            failure) MSG+="‚ö†Ô∏è Deploy: failure\n" ;;
            *)       MSG+="‚û°Ô∏è Deploy: $DEPLOY\n" ;;
          esac

          MSG+="repo: ${{ github.repository }}\n"
          MSG+="branch: ${{ github.ref_name }}\n"
          MSG+="commit: ${{ github.sha }}\n"
          MSG+="by: ${{ github.actor }}\n"
          MSG+="run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          MSG_ESCAPED=${MSG//$'\n'/\\n}
          curl -H 'Content-Type: application/json' \
               -d "{\"content\":\"$MSG_ESCAPED\"}" \
               "$DISCORD_WEBHOOK_URL"
